{"version":3,"sources":["webpack:///static/0.10a17c16.chunk.js","webpack:///./catalog/text-input/variations.md?12cd","webpack:///./catalog/text-input/variations.md"],"names":["webpackJsonp","1056","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","1070"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KAAAG,YACAA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAAT,EAAA,QAEhBU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/0.10a17c16.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 1056:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(2);\n    var createReactClass = __webpack_require__(53);\n    var PageRenderer = __webpack_require__(384).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(1070)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 1070:\n/***/ (function(module, exports) {\n\nmodule.exports = \"```hint\\nExperimental warning: The styled inputs below are based off of Faithlife Sites and may not be consistent with the new styled controls, prefer to use Bootstrap components where possible.\\n```\\n\\n### Validated input\\n\\nA standard text input control with local validation. \\\\`TextInput.Input\\\\` is used as a render prop so that additional input properties can be set, such as \\\\`placeholder\\\\`.\\n\\n```react\\nshowSource: true\\nstate: { isValid: false, value: '' }\\n---\\n<div className=\\\"container\\\">\\n\\t<style>\\n\\t{`\\n\\t\\t.container {\\n\\t\\t\\tfont-family: 'Source Sans Pro';\\n\\t\\t\\tcolor: #333333;\\n\\t\\t}\\n\\t\\t.inputWrapper {\\n\\t\\t\\tmax-width: 300px;\\n\\t\\t}\\n\\t\\t.container > * {\\n\\t\\t\\tmargin: 8px;\\n\\t\\t}\\n\\t`}\\n\\t</style>\\n\\t<div className=\\\"inputWrapper\\\">\\n\\t\\t<ValidatedInput\\n\\t\\t\\tvalue={state.value}\\n\\t\\t\\tonValidationChange={newState => {\\n\\t\\t\\t\\tif (newState.isValid != null) {\\n\\t\\t\\t\\t\\tsetState({ isValid: newState.isValid });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (newState.inputValue != null) {\\n\\t\\t\\t\\t\\tsetState({ validatedValue: newState.inputValue });\\n\\t\\t\\t\\t}\\n\\t\\t\\t}}\\n\\t\\t\\tgetIsValidInput={value => ({\\n\\t\\t\\t\\tisValid: value !== 'error',\\n\\t\\t\\t\\tvalidationErrorString: 'This is a custom error message',\\n\\t\\t\\t})}\\n\\t\\t\\tdebounce={200}\\n\\t\\t\\tplaceholder=\\\"Bellingham\\\"\\n\\t\\t\\ttitle=\\\"Location\\\"\\n\\t\\t\\thelp={<span>Try typing 'error'</span>}\\n\\t\\t/>\\n\\t</div>\\n\\t<Button primary medium disabled={!state.isValid}>\\n\\t\\tSave\\n\\t</Button>\\n</div>\\n```\\n\\n### No validation\\n\\n```react\\nshowSource: true\\nstate: { isValid: false, value: '' }\\n---\\n<div className=\\\"container\\\">\\n\\t<style>\\n\\t{`\\n\\t\\t.container {\\n\\t\\t\\tfont-family: 'Source Sans Pro';\\n\\t\\t\\tcolor: #333333;\\n\\t\\t}\\n\\t\\t.inputWrapper {\\n\\t\\t\\tmax-width: 300px;\\n\\t\\t}\\n\\t\\t.container > * {\\n\\t\\t\\tmargin: 8px;\\n\\t\\t}\\n\\t`}\\n\\t</style>\\n\\t<div className=\\\"inputWrapper\\\">\\n\\t\\t<Input\\n\\t\\t\\tvalue={state.value}\\n\\t\\t\\tonChange={value => setState({ value: value, isValid: value !== '' })}\\n\\t\\t\\tplaceholder=\\\"Bellingham\\\"\\n\\t\\t\\ttitle=\\\"Location\\\"\\n\\t\\t\\tdebounce={200}\\n\\t\\t/>\\n\\t</div>\\n\\t<Button primary medium disabled={!state.isValid}>\\n\\t\\tSave\\n\\t</Button>\\n</div>\\n```\\n\\n### Remote API Validation\\n\\nSimulates making a network call to validate the field, using a Promise which takes 500 ms to resolve.\\n\\n```react\\nshowSource: true\\nstate: { isValid: false, value: '' }\\n---\\n<div className=\\\"container\\\">\\n\\t<style>\\n\\t{`\\n\\t\\t.container {\\n\\t\\t\\tfont-family: 'Source Sans Pro';\\n\\t\\t\\tcolor: #333333;\\n\\t\\t}\\n\\t\\t.inputWrapper {\\n\\t\\t\\tmax-width: 300px;\\n\\t\\t}\\n\\t\\t.container > * {\\n\\t\\t\\tmargin: 8px;\\n\\t\\t}\\n\\t`}\\n\\t</style>\\n\\t<div className=\\\"inputWrapper\\\">\\n\\t\\t<ValidatedInput\\n\\t\\t\\tvalue={state.value}\\n\\t\\t\\tonValidationChange={newState => {\\n\\t\\t\\t\\tif (newState.isValid != null) {\\n\\t\\t\\t\\t\\tsetState({ isValid: newState.isValid });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (newState.inputValue != null) {\\n\\t\\t\\t\\t\\tsetState({ value: newState.inputValue });\\n\\t\\t\\t\\t}\\n\\t\\t\\t}}\\n\\t\\t\\tgetIsValidInput={value =>\\n\\t\\t\\t\\tdelayPromise(500).then(() =>\\n\\t\\t\\t\\t\\tPromise.resolve({\\n\\t\\t\\t\\t\\t\\tisValid: value !== 'error',\\n\\t\\t\\t\\t\\t\\tvalidationErrorString: 'This is a custom error message',\\n\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t)\\n\\t\\t\\t}\\n\\t\\t\\tdebounce={200}\\n\\t\\t\\tplaceholder=\\\"Bellingham\\\"\\n\\t\\t\\ttitle=\\\"Location\\\"\\n\\t\\t\\thelp={<span>Try typing 'error'</span>}\\n\\t\\t/>\\n\\t</div>\\n\\t<Button primary medium disabled={!state.isValid}>\\n\\t\\tSave\\n\\t</Button>\\n</div>\\n```\\n\\nAPI calls can sometimes fail. When this happens, the control will show a generic error message.\\n\\n```react\\nshowSource: true\\nstate: { isValid: false, value: '' }\\n---\\n<div className=\\\"container\\\">\\n\\t<style>\\n\\t{`\\n\\t\\t.container {\\n\\t\\t\\tfont-family: 'Source Sans Pro';\\n\\t\\t\\tcolor: #333333;\\n\\t\\t}\\n\\t\\t.inputWrapper {\\n\\t\\t\\tmax-width: 300px;\\n\\t\\t}\\n\\t\\t.container > * {\\n\\t\\t\\tmargin: 8px;\\n\\t\\t}\\n\\t`}\\n\\t</style>\\n\\t<div className=\\\"inputWrapper\\\">\\n\\t\\t<ValidatedInput\\n\\t\\t\\tvalue={state.value}\\n\\t\\t\\tonValidationChange={newState => {\\n\\t\\t\\t\\tif (newState.isValid != null) {\\n\\t\\t\\t\\t\\tsetState({ isValid: newState.isValid });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (newState.inputValue != null) {\\n\\t\\t\\t\\t\\tsetState({ value: newState.inputValue });\\n\\t\\t\\t\\t}\\n\\t\\t\\t}}\\n\\t\\t\\tgetIsValidInput={value =>\\n\\t\\t\\t\\tdelayPromise(500).then(() =>\\n\\t\\t\\t\\t\\tPromise.reject()\\n\\t\\t\\t\\t)\\n\\t\\t\\t}\\n\\t\\t\\tdebounce={200}\\n\\t\\t\\tplaceholder=\\\"Bellingham\\\"\\n\\t\\t\\ttitle=\\\"Location\\\"\\n\\t\\t\\thelp={<span>Try typing 'error'</span>}\\n\\t\\t/>\\n\\t</div>\\n\\t<Button primary medium disabled={!state.isValid}>\\n\\t\\tSave\\n\\t</Button>\\n</div>\\n```\\n\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/0.10a17c16.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/text-input/variations.md\n// module id = 1056\n// module chunks = 0","module.exports = \"```hint\\nExperimental warning: The styled inputs below are based off of Faithlife Sites and may not be consistent with the new styled controls, prefer to use Bootstrap components where possible.\\n```\\n\\n### Validated input\\n\\nA standard text input control with local validation. \\\\`TextInput.Input\\\\` is used as a render prop so that additional input properties can be set, such as \\\\`placeholder\\\\`.\\n\\n```react\\nshowSource: true\\nstate: { isValid: false, value: '' }\\n---\\n<div className=\\\"container\\\">\\n\\t<style>\\n\\t{`\\n\\t\\t.container {\\n\\t\\t\\tfont-family: 'Source Sans Pro';\\n\\t\\t\\tcolor: #333333;\\n\\t\\t}\\n\\t\\t.inputWrapper {\\n\\t\\t\\tmax-width: 300px;\\n\\t\\t}\\n\\t\\t.container > * {\\n\\t\\t\\tmargin: 8px;\\n\\t\\t}\\n\\t`}\\n\\t</style>\\n\\t<div className=\\\"inputWrapper\\\">\\n\\t\\t<ValidatedInput\\n\\t\\t\\tvalue={state.value}\\n\\t\\t\\tonValidationChange={newState => {\\n\\t\\t\\t\\tif (newState.isValid != null) {\\n\\t\\t\\t\\t\\tsetState({ isValid: newState.isValid });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (newState.inputValue != null) {\\n\\t\\t\\t\\t\\tsetState({ validatedValue: newState.inputValue });\\n\\t\\t\\t\\t}\\n\\t\\t\\t}}\\n\\t\\t\\tgetIsValidInput={value => ({\\n\\t\\t\\t\\tisValid: value !== 'error',\\n\\t\\t\\t\\tvalidationErrorString: 'This is a custom error message',\\n\\t\\t\\t})}\\n\\t\\t\\tdebounce={200}\\n\\t\\t\\tplaceholder=\\\"Bellingham\\\"\\n\\t\\t\\ttitle=\\\"Location\\\"\\n\\t\\t\\thelp={<span>Try typing 'error'</span>}\\n\\t\\t/>\\n\\t</div>\\n\\t<Button primary medium disabled={!state.isValid}>\\n\\t\\tSave\\n\\t</Button>\\n</div>\\n```\\n\\n### No validation\\n\\n```react\\nshowSource: true\\nstate: { isValid: false, value: '' }\\n---\\n<div className=\\\"container\\\">\\n\\t<style>\\n\\t{`\\n\\t\\t.container {\\n\\t\\t\\tfont-family: 'Source Sans Pro';\\n\\t\\t\\tcolor: #333333;\\n\\t\\t}\\n\\t\\t.inputWrapper {\\n\\t\\t\\tmax-width: 300px;\\n\\t\\t}\\n\\t\\t.container > * {\\n\\t\\t\\tmargin: 8px;\\n\\t\\t}\\n\\t`}\\n\\t</style>\\n\\t<div className=\\\"inputWrapper\\\">\\n\\t\\t<Input\\n\\t\\t\\tvalue={state.value}\\n\\t\\t\\tonChange={value => setState({ value: value, isValid: value !== '' })}\\n\\t\\t\\tplaceholder=\\\"Bellingham\\\"\\n\\t\\t\\ttitle=\\\"Location\\\"\\n\\t\\t\\tdebounce={200}\\n\\t\\t/>\\n\\t</div>\\n\\t<Button primary medium disabled={!state.isValid}>\\n\\t\\tSave\\n\\t</Button>\\n</div>\\n```\\n\\n### Remote API Validation\\n\\nSimulates making a network call to validate the field, using a Promise which takes 500 ms to resolve.\\n\\n```react\\nshowSource: true\\nstate: { isValid: false, value: '' }\\n---\\n<div className=\\\"container\\\">\\n\\t<style>\\n\\t{`\\n\\t\\t.container {\\n\\t\\t\\tfont-family: 'Source Sans Pro';\\n\\t\\t\\tcolor: #333333;\\n\\t\\t}\\n\\t\\t.inputWrapper {\\n\\t\\t\\tmax-width: 300px;\\n\\t\\t}\\n\\t\\t.container > * {\\n\\t\\t\\tmargin: 8px;\\n\\t\\t}\\n\\t`}\\n\\t</style>\\n\\t<div className=\\\"inputWrapper\\\">\\n\\t\\t<ValidatedInput\\n\\t\\t\\tvalue={state.value}\\n\\t\\t\\tonValidationChange={newState => {\\n\\t\\t\\t\\tif (newState.isValid != null) {\\n\\t\\t\\t\\t\\tsetState({ isValid: newState.isValid });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (newState.inputValue != null) {\\n\\t\\t\\t\\t\\tsetState({ value: newState.inputValue });\\n\\t\\t\\t\\t}\\n\\t\\t\\t}}\\n\\t\\t\\tgetIsValidInput={value =>\\n\\t\\t\\t\\tdelayPromise(500).then(() =>\\n\\t\\t\\t\\t\\tPromise.resolve({\\n\\t\\t\\t\\t\\t\\tisValid: value !== 'error',\\n\\t\\t\\t\\t\\t\\tvalidationErrorString: 'This is a custom error message',\\n\\t\\t\\t\\t\\t}),\\n\\t\\t\\t\\t)\\n\\t\\t\\t}\\n\\t\\t\\tdebounce={200}\\n\\t\\t\\tplaceholder=\\\"Bellingham\\\"\\n\\t\\t\\ttitle=\\\"Location\\\"\\n\\t\\t\\thelp={<span>Try typing 'error'</span>}\\n\\t\\t/>\\n\\t</div>\\n\\t<Button primary medium disabled={!state.isValid}>\\n\\t\\tSave\\n\\t</Button>\\n</div>\\n```\\n\\nAPI calls can sometimes fail. When this happens, the control will show a generic error message.\\n\\n```react\\nshowSource: true\\nstate: { isValid: false, value: '' }\\n---\\n<div className=\\\"container\\\">\\n\\t<style>\\n\\t{`\\n\\t\\t.container {\\n\\t\\t\\tfont-family: 'Source Sans Pro';\\n\\t\\t\\tcolor: #333333;\\n\\t\\t}\\n\\t\\t.inputWrapper {\\n\\t\\t\\tmax-width: 300px;\\n\\t\\t}\\n\\t\\t.container > * {\\n\\t\\t\\tmargin: 8px;\\n\\t\\t}\\n\\t`}\\n\\t</style>\\n\\t<div className=\\\"inputWrapper\\\">\\n\\t\\t<ValidatedInput\\n\\t\\t\\tvalue={state.value}\\n\\t\\t\\tonValidationChange={newState => {\\n\\t\\t\\t\\tif (newState.isValid != null) {\\n\\t\\t\\t\\t\\tsetState({ isValid: newState.isValid });\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (newState.inputValue != null) {\\n\\t\\t\\t\\t\\tsetState({ value: newState.inputValue });\\n\\t\\t\\t\\t}\\n\\t\\t\\t}}\\n\\t\\t\\tgetIsValidInput={value =>\\n\\t\\t\\t\\tdelayPromise(500).then(() =>\\n\\t\\t\\t\\t\\tPromise.reject()\\n\\t\\t\\t\\t)\\n\\t\\t\\t}\\n\\t\\t\\tdebounce={200}\\n\\t\\t\\tplaceholder=\\\"Bellingham\\\"\\n\\t\\t\\ttitle=\\\"Location\\\"\\n\\t\\t\\thelp={<span>Try typing 'error'</span>}\\n\\t\\t/>\\n\\t</div>\\n\\t<Button primary medium disabled={!state.isValid}>\\n\\t\\tSave\\n\\t</Button>\\n</div>\\n```\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/text-input/variations.md\n// module id = 1070\n// module chunks = 0"],"sourceRoot":""}